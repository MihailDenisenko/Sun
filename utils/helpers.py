import json
import os
from typing import Dict, Any

def load_products() -> Dict[str, Any]:
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø—Ä–æ–¥—É–∫—Ç—ã –∏–∑ JSON —Ñ–∞–π–ª–∞"""
    try:
        file_path = 'data/products.json'
        print(f"üîç –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å JSON –∏–∑: {file_path}")
        print(f"üîç –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {os.path.exists(file_path)}")
        
        with open(file_path, 'r', encoding='utf-8') as f:
            data = json.load(f)
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ {len(data)} —Ç–æ–≤–∞—Ä–æ–≤")
            return data
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª products.json –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return {}
    except json.JSONDecodeError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}")
        return {}
    except Exception as e:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return {}

def get_categories(products: Dict[str, Any]) -> list:
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π"""
    categories = set()
    for product_data in products.values():
        categories.add(product_data['category'])
    result = sorted(list(categories))
    print(f"üîç –ù–∞–π–¥–µ–Ω—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {result}")
    return result

def get_products_by_category(products: Dict[str, Any], category: str) -> Dict[str, Any]:
    """–ü–æ–ª—É—á–∞–µ—Ç —Ç–æ–≤–∞—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    result = {k: v for k, v in products.items() if v['category'] == category}
    print(f"üîç –í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{category}' –Ω–∞–π–¥–µ–Ω–æ {len(result)} —Ç–æ–≤–∞—Ä–æ–≤")
    return result

def format_price(price: float) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ü–µ–Ω—É –≤ –∫—Ä–∞—Å–∏–≤—ã–π –≤–∏–¥"""
    return f"{price:,.0f} —Ä—É–±.".replace(',', ' ')

def calculate_cart_total(cart_items: list) -> float:
    """–í—ã—á–∏—Å–ª—è–µ—Ç –æ–±—â—É—é —Å—É–º–º—É –∫–æ—Ä–∑–∏–Ω—ã"""
    return sum(item['price'] * item['quantity'] for item in cart_items)