from telegram import Update
from telegram.ext import ContextTypes, MessageHandler, filters
from utils.helpers import format_price, calculate_cart_total
from keyboards.main_menu import get_main_menu_keyboard
from config import MAIN_MENU, CONFIRMING_ORDER
# from database.models import db  # –†–ê–°–ö–û–ú–ú–ï–ù–¢–ò–†–û–í–ê–¢–¨ –∫–æ–≥–¥–∞ –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ë–î

async def handle_contact(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞"""
    contact = update.message.contact
    user = update.effective_user
    
    if contact:
        phone_number = contact.phone_number
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        context.user_data['customer_phone'] = phone_number
        context.user_data['customer_name'] = f"{user.first_name} {user.last_name or ''}".strip()
    else:
        # –ï—Å–ª–∏ –∫–æ–Ω—Ç–∞–∫—Ç –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, –ø—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é
        await update.message.reply_text(
            "üì± –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏:",
            reply_markup=get_main_menu_keyboard()
        )
        return AWAITING_PHONE
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é –∑–∞–∫–∞–∑–∞
    return await confirm_order(update, context)

async def handle_manual_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä—É—á–Ω–æ–π –≤–≤–æ–¥ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
    phone_number = update.message.text
    user = update.effective_user
    
    # –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞
    if len(phone_number) < 5:
        await update.message.reply_text(
            "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:",
            reply_markup=get_main_menu_keyboard()
        )
        return AWAITING_PHONE
    
    context.user_data['customer_phone'] = phone_number
    context.user_data['customer_name'] = f"{user.first_name} {user.last_name or ''}".strip()
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é –∑–∞–∫–∞–∑–∞
    return await confirm_order(update, context)

async def confirm_order(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞"""
    cart = context.user_data.get('cart', [])
    customer_name = context.user_data.get('customer_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
    customer_phone = context.user_data.get('customer_phone', '–ù–µ —É–∫–∞–∑–∞–Ω')
    total_amount = calculate_cart_total(cart)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    confirmation_text = f"""
‚úÖ *–ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!*

üë§ *–ö–ª–∏–µ–Ω—Ç:* {customer_name}
üì± *–¢–µ–ª–µ—Ñ–æ–Ω:* {customer_phone}

üì¶ *–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:*
"""
    
    for item in cart:
        confirmation_text += f"‚Ä¢ {item['name']} ({item['size']}, {item['color']}) - {item['quantity']} —à—Ç. - {format_price(item['total'])}\n"
    
    confirmation_text += f"\nüí∞ *–û–±—â–∞—è —Å—É–º–º–∞: {format_price(total_amount)}*"
    confirmation_text += "\n\n‚è≥ *–°—Ç–∞—Ç—É—Å:* –ü–µ—Ä–µ–¥–∞–Ω –º–µ–Ω–µ–¥–∂–µ—Ä—É\nüìû –° –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π."
    
    # –°–û–•–†–ê–ù–ï–ù–ò–ï –í –ë–î - –†–ê–°–ö–û–ú–ú–ï–ù–¢–ò–†–û–í–ê–¢–¨ –ö–û–ì–î–ê –ë–£–î–ï–¢ –ì–û–¢–û–í–û
    """
    try:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–∫–∞–∑ –≤ –ë–î
        order_id = db.save_order(
            user_id=update.effective_user.id,
            order_data=cart,
            total_amount=total_amount,
            customer_name=customer_name,
            customer_phone=customer_phone
        )
        confirmation_text += f"\n\nüìã *–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:* #{order_id}"
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
        await notify_admins(update, context, order_id, cart, total_amount, customer_name, customer_phone)
        
    except Exception as e:
        confirmation_text += "\n\n‚ö†Ô∏è *–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:* –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞. –ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —ç—Ç–∏–º!"
    """
    
    # –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞ –±–µ–∑ –ë–î
    confirmation_text += "\n\nüìã *–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:* #0001"
    await notify_admins(update, context, 1, cart, total_amount, customer_name, customer_phone)
    
    # –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞
    context.user_data['cart'] = []
    
    await update.message.reply_text(
        confirmation_text,
        reply_markup=get_main_menu_keyboard(),
        parse_mode='Markdown'
    )
    
    return MAIN_MENU

async def notify_admins(update: Update, context: ContextTypes.DEFAULT_TYPE, order_id: int, 
                       cart: list, total_amount: float, customer_name: str, customer_phone: str):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ"""
    from config import ADMIN_IDS, BOT_TOKEN
    
    if not ADMIN_IDS:
        return
    
    notification_text = f"""
üõé *–ù–û–í–´–ô –ó–ê–ö–ê–ó #{order_id}*

üë§ *–ö–ª–∏–µ–Ω—Ç:* {customer_name}
üì± *–¢–µ–ª–µ—Ñ–æ–Ω:* {customer_phone}
üë§ *Telegram:* @{update.effective_user.username or '–Ω–µ —É–∫–∞–∑–∞–Ω'}

üì¶ *–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:*
"""
    
    for item in cart:
        notification_text += f"‚Ä¢ {item['name']} ({item['size']}, {item['color']}) - {item['quantity']} —à—Ç. - {format_price(item['total'])}\n"
    
    notification_text += f"\nüí∞ *–û–±—â–∞—è —Å—É–º–º–∞: {format_price(total_amount)}*"
    notification_text += f"\n_–ó–∞–∫–∞–∑ –ø–æ–ª—É—á–µ–Ω –æ—Ç @{update.effective_user.username or 'N/A'}_"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
    for admin_id in ADMIN_IDS:
        try:
            await context.bot.send_message(
                chat_id=admin_id,
                text=notification_text,
                parse_mode='Markdown'
            )
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {admin_id}: {e}")

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
order_handlers = [
    MessageHandler(filters.CONTACT, handle_contact),
    MessageHandler(filters.TEXT & ~filters.COMMAND, handle_manual_phone)
]